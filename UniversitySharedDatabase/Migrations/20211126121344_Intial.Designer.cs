// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniversitySharedDatabase.Models;

namespace UniversitySharedDatabase.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211126121344_Intial")]
    partial class Intial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UniversitySharedDatabase.Models.Club", b =>
                {
                    b.Property<int>("ClubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClubName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Eligibility")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClubId");

                    b.ToTable("Clubs");
                });

            modelBuilder.Entity("UniversitySharedDatabase.Models.DesignationCouncil", b =>
                {
                    b.Property<int>("DesgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DesgId");

                    b.ToTable("DesignationCouncils");

                    b.HasData(
                        new
                        {
                            DesgId = 1,
                            Designation = "NA"
                        },
                        new
                        {
                            DesgId = 2,
                            Designation = "President"
                        },
                        new
                        {
                            DesgId = 3,
                            Designation = "Vice-president"
                        },
                        new
                        {
                            DesgId = 4,
                            Designation = "Treasurer"
                        },
                        new
                        {
                            DesgId = 5,
                            Designation = "Executive member"
                        },
                        new
                        {
                            DesgId = 6,
                            Designation = "Associate co-ordinator"
                        },
                        new
                        {
                            DesgId = 7,
                            Designation = "Secretary "
                        });
                });

            modelBuilder.Entity("UniversitySharedDatabase.Models.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClubId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalAttendedStudents")
                        .HasColumnType("int");

                    b.HasKey("EventId");

                    b.HasIndex("ClubId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("UniversitySharedDatabase.Models.Grievance", b =>
                {
                    b.Property<int>("GrievanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GrievanceId");

                    b.ToTable("Grievances");

                    b.HasData(
                        new
                        {
                            GrievanceId = 1,
                            Type = "Complaint"
                        },
                        new
                        {
                            GrievanceId = 2,
                            Type = "Suggestion"
                        },
                        new
                        {
                            GrievanceId = 3,
                            Type = "Technical Problem"
                        });
                });

            modelBuilder.Entity("UniversitySharedDatabase.Models.Idea", b =>
                {
                    b.Property<int>("IdeaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClubId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("IdeaTitle")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("IdeaId");

                    b.HasIndex("ClubId");

                    b.HasIndex("UserId");

                    b.ToTable("Ideas");
                });

            modelBuilder.Entity("UniversitySharedDatabase.Models.SecurityQuestion", b =>
                {
                    b.Property<int>("QuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuId");

                    b.ToTable("SecurityQuestions");

                    b.HasData(
                        new
                        {
                            QuId = 1,
                            Question = "What is your mother's maiden name?"
                        },
                        new
                        {
                            QuId = 2,
                            Question = "What is the name of your first pet?"
                        },
                        new
                        {
                            QuId = 3,
                            Question = "What was your first car?"
                        },
                        new
                        {
                            QuId = 4,
                            Question = "What elementary school did you attend?"
                        },
                        new
                        {
                            QuId = 5,
                            Question = "What is the name of the town where you were born?"
                        },
                        new
                        {
                            QuId = 6,
                            Question = "When you were young, what did you want to be when you grew up?"
                        },
                        new
                        {
                            QuId = 7,
                            Question = "Who was your childhood hero?"
                        },
                        new
                        {
                            QuId = 8,
                            Question = "Where was your best family vacation as a kid?"
                        });
                });

            modelBuilder.Entity("UniversitySharedDatabase.Models.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BeginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("VolunteerCount")
                        .HasColumnType("int");

                    b.HasKey("ServiceId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("UniversitySharedDatabase.Models.Share", b =>
                {
                    b.Property<int>("ShareId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EventOrIdea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedId")
                        .HasColumnType("int");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.HasKey("ShareId");

                    b.ToTable("Shares");
                });

            modelBuilder.Entity("UniversitySharedDatabase.Models.StatusFeild", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusId");

                    b.ToTable("StatusFeilds");

                    b.HasData(
                        new
                        {
                            StatusId = 1,
                            Status = "Pending /Open"
                        },
                        new
                        {
                            StatusId = 2,
                            Status = "InProgress"
                        },
                        new
                        {
                            StatusId = 3,
                            Status = "Closed"
                        });
                });

            modelBuilder.Entity("UniversitySharedDatabase.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuId")
                        .HasColumnType("int");

                    b.Property<string>("SecurityAns")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("UserId");

                    b.HasIndex("QuId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UniversitySharedDatabase.Models.UserClub", b =>
                {
                    b.Property<int>("UserClubRegId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClubId")
                        .HasColumnType("int");

                    b.Property<int>("DesgId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserClubRegId");

                    b.HasIndex("ClubId");

                    b.HasIndex("DesgId");

                    b.HasIndex("UserId");

                    b.ToTable("UserClubs");
                });

            modelBuilder.Entity("UniversitySharedDatabase.Models.UserEvent", b =>
                {
                    b.Property<int>("UserEventID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Attendence")
                        .HasColumnType("bit");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<bool>("LikesOrDislike")
                        .HasColumnType("bit");

                    b.Property<string>("Suggestion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserEventID");

                    b.HasIndex("EventId");

                    b.HasIndex("UserId");

                    b.ToTable("UserEvents");
                });

            modelBuilder.Entity("UniversitySharedDatabase.Models.UserGrievance", b =>
                {
                    b.Property<int>("ReferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("GrievanceId")
                        .HasColumnType("int");

                    b.Property<string>("Problem")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Reply")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ResolutionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ReferenceId");

                    b.HasIndex("GrievanceId");

                    b.HasIndex("StatusId");

                    b.HasIndex("UserId");

                    b.ToTable("UserGrievances");
                });

            modelBuilder.Entity("UniversitySharedDatabase.Models.UserIdea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("IdeaId")
                        .HasColumnType("int");

                    b.Property<bool>("LikeStatus")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdeaId");

                    b.HasIndex("UserId");

                    b.ToTable("UserIdeas");
                });

            modelBuilder.Entity("UniversitySharedDatabase.Models.UserService", b =>
                {
                    b.Property<int>("RegId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RegId");

                    b.HasIndex("ServiceId");

                    b.HasIndex("UserId");

                    b.ToTable("UserServices");
                });

            modelBuilder.Entity("UniversitySharedDatabase.Models.Event", b =>
                {
                    b.HasOne("UniversitySharedDatabase.Models.Club", "Club")
                        .WithMany("Events")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Club");
                });

            modelBuilder.Entity("UniversitySharedDatabase.Models.Idea", b =>
                {
                    b.HasOne("UniversitySharedDatabase.Models.Club", "Club")
                        .WithMany("Ideas")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversitySharedDatabase.Models.User", "User")
                        .WithMany("Ideas")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Club");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UniversitySharedDatabase.Models.User", b =>
                {
                    b.HasOne("UniversitySharedDatabase.Models.SecurityQuestion", "SecurityQuestion")
                        .WithMany("Users")
                        .HasForeignKey("QuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SecurityQuestion");
                });

            modelBuilder.Entity("UniversitySharedDatabase.Models.UserClub", b =>
                {
                    b.HasOne("UniversitySharedDatabase.Models.Club", "Club")
                        .WithMany("UserClubs")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversitySharedDatabase.Models.DesignationCouncil", "DesignationCouncils")
                        .WithMany("UserClubs")
                        .HasForeignKey("DesgId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversitySharedDatabase.Models.User", "User")
                        .WithMany("UserClubs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Club");

                    b.Navigation("DesignationCouncils");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UniversitySharedDatabase.Models.UserEvent", b =>
                {
                    b.HasOne("UniversitySharedDatabase.Models.Event", "Events")
                        .WithMany("UserEvents")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversitySharedDatabase.Models.User", "User")
                        .WithMany("UserEvents")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Events");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UniversitySharedDatabase.Models.UserGrievance", b =>
                {
                    b.HasOne("UniversitySharedDatabase.Models.Grievance", "Grievance")
                        .WithMany("UserGrievances")
                        .HasForeignKey("GrievanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversitySharedDatabase.Models.StatusFeild", "StatusFeild")
                        .WithMany("UserGrievances")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversitySharedDatabase.Models.User", "User")
                        .WithMany("UserGrievances")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grievance");

                    b.Navigation("StatusFeild");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UniversitySharedDatabase.Models.UserIdea", b =>
                {
                    b.HasOne("UniversitySharedDatabase.Models.Idea", "Idea")
                        .WithMany("UserIdeas")
                        .HasForeignKey("IdeaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversitySharedDatabase.Models.User", "User")
                        .WithMany("UserIdeas")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Idea");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UniversitySharedDatabase.Models.UserService", b =>
                {
                    b.HasOne("UniversitySharedDatabase.Models.Service", "Service")
                        .WithMany("UserServices")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversitySharedDatabase.Models.User", "User")
                        .WithMany("UserServices")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Service");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UniversitySharedDatabase.Models.Club", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Ideas");

                    b.Navigation("UserClubs");
                });

            modelBuilder.Entity("UniversitySharedDatabase.Models.DesignationCouncil", b =>
                {
                    b.Navigation("UserClubs");
                });

            modelBuilder.Entity("UniversitySharedDatabase.Models.Event", b =>
                {
                    b.Navigation("UserEvents");
                });

            modelBuilder.Entity("UniversitySharedDatabase.Models.Grievance", b =>
                {
                    b.Navigation("UserGrievances");
                });

            modelBuilder.Entity("UniversitySharedDatabase.Models.Idea", b =>
                {
                    b.Navigation("UserIdeas");
                });

            modelBuilder.Entity("UniversitySharedDatabase.Models.SecurityQuestion", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("UniversitySharedDatabase.Models.Service", b =>
                {
                    b.Navigation("UserServices");
                });

            modelBuilder.Entity("UniversitySharedDatabase.Models.StatusFeild", b =>
                {
                    b.Navigation("UserGrievances");
                });

            modelBuilder.Entity("UniversitySharedDatabase.Models.User", b =>
                {
                    b.Navigation("Ideas");

                    b.Navigation("UserClubs");

                    b.Navigation("UserEvents");

                    b.Navigation("UserGrievances");

                    b.Navigation("UserIdeas");

                    b.Navigation("UserServices");
                });
#pragma warning restore 612, 618
        }
    }
}
